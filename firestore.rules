/*
firestore.rules - Updated với userLocations collection support
Chỉnh sửa rules để thêm support cho tính năng "Tìm bạn bè xung quanh"
Logic: 
- Thêm rules cho userLocations collection để users có thể lưu vị trí
- Authenticated users có thể read/write location data của chính mình
- Authenticated users có thể read locations của friends để tính nearby
- Giữ nguyên security cho các collections khác
*/

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - Chỉ owner có thể chỉnh sửa, tất cả có thể đọc
    match /users/{userId} {
      allow read: if true; // Cho phép đọc public để hiển thị profile, search users
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Posts collection - FIXED: Cho phép authenticated users read/write để support like operations
    match /posts/{postId} {
      allow read: if true; // Public read cho discover, home feed
      allow create: if request.auth != null; // Authenticated users có thể tạo post
      allow update: if request.auth != null; // FIXED: Cho phép update để increment likes counter
      allow delete: if request.auth != null 
        && request.auth.uid == resource.data.UserID; // Chỉ owner mới xóa được
    }
    
    // Comments collection - FIXED: Loosened permissions cho comments
    match /comments/{commentId} {
      allow read: if true; // Public read để hiển thị comments
      allow create: if request.auth != null; // FIXED: Authenticated users có thể tạo comment
      allow update: if request.auth != null 
        && request.auth.uid == resource.data.UserID; // Chỉ owner update comment của mình
      allow delete: if request.auth != null 
        && request.auth.uid == resource.data.UserID; // Chỉ owner xóa comment của mình
    }
    
    // Likes collection - FIXED: Completely loosened permissions cho likes
    match /likes/{likeId} {
      allow read: if true; // Public read để count likes
      allow create: if request.auth != null; // FIXED: Authenticated users có thể like
      allow delete: if request.auth != null; // FIXED: Authenticated users có thể unlike
      allow update: if false; // Không cho phép update likes (chỉ create/delete)
    }
    
    // Friends collection - Authenticated users có thể CRUD relationships của mình
    match /friends/{friendshipId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null 
        && (request.auth.uid == request.resource.data.senderId 
        || request.auth.uid == request.resource.data.receiverId);
      allow update: if request.auth != null 
        && (request.auth.uid == resource.data.senderId 
        || request.auth.uid == resource.data.receiverId);
      allow delete: if request.auth != null 
        && (request.auth.uid == resource.data.senderId 
        || request.auth.uid == resource.data.receiverId);
    }
    
    // Notifications collection - Recipient có thể đọc và update (mark as read)
    match /notifications/{notificationId} {
      allow read, update: if request.auth != null 
        && request.auth.uid == resource.data.recipientId;
      allow create: if request.auth != null; // Cho phép tạo notification cho users khác
      allow delete: if false; // Không cho phép xóa notifications
    }
    
    // User Interests collection - Owner có thể CRUD
    match /userInterests/{userId} {
      allow read: if true; // Public read để gợi ý content
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // NEW - User Locations collection cho nearby friends feature
    match /userLocations/{userId} {
      allow read: if request.auth != null; // Authenticated users có thể đọc locations để tìm nearby friends
      allow write: if request.auth != null && request.auth.uid == userId; // Chỉ owner có thể write location của mình
      allow delete: if request.auth != null && request.auth.uid == userId; // Chỉ owner có thể xóa location của mình
    }
    
    // Deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}